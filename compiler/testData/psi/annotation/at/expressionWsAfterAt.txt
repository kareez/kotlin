JetFile: expressionWsAfterAt.kt
  PACKAGE_DIRECTIVE
    <empty list>
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      RETURN
        PsiElement(return)('return')
        PsiErrorElement:There should be no space or comments before '@' in label reference
          <empty list>
        PsiWhiteSpace(' ')
        PsiErrorElement:Label must be named
          PsiElement(AT)('@')
        PsiWhiteSpace(' ')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('ann')
      PsiWhiteSpace(' ')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(INTEGER_LITERAL)('1')
      PsiWhiteSpace('\n    ')
      RETURN
        PsiElement(return)('return')
        PsiWhiteSpace(' ')
        PARENTHESIZED
          PsiElement(LPAR)('(')
          ANNOTATED_EXPRESSION
            PsiErrorElement:Expected annotation identifier after '@'
              PsiElement(AT)('@')
            PsiWhiteSpace(' ')
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('ann')
          PsiErrorElement:Expecting ')'
            <empty list>
      PsiWhiteSpace(' ')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(INTEGER_LITERAL)('2')
        PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n    ')
      BINARY_EXPRESSION
        ANNOTATED_EXPRESSION
          PsiErrorElement:Expected annotation identifier after '@'
            PsiElement(AT)('@')
          PsiWhiteSpace(' ')
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('ann')
        PsiWhiteSpace(' ')
        OPERATION_REFERENCE
          PsiElement(IDENTIFIER)('foo')
        PARENTHESIZED
          PsiElement(LPAR)('(')
          STRING_TEMPLATE
            PsiElement(OPEN_QUOTE)('"')
            PsiElement(CLOSING_QUOTE)('"')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n    ')
      ANNOTATED_EXPRESSION
        PsiErrorElement:Expected annotation identifier after '@'
          PsiElement(AT)('@')
        PsiWhiteSpace(' ')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('ann')
      PsiWhiteSpace(' ')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(INTEGER_LITERAL)('3')
        PsiWhiteSpace(' ')
        PsiElement(PLUS)('+')
        PsiWhiteSpace(' ')
        PsiElement(AT)('@')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('ann')
        PsiWhiteSpace(' ')
        PsiElement(INTEGER_LITERAL)('4')
        PsiWhiteSpace(' ')
        PsiElement(MUL)('*')
        PsiWhiteSpace(' ')
        PsiElement(AT)('@')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('ann')
        PsiElement(LPAR)('(')
        PsiElement(OPEN_QUOTE)('"')
        PsiElement(CLOSING_QUOTE)('"')
        PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(INTEGER_LITERAL)('5')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('infix')
        PsiWhiteSpace(' ')
        PsiElement(AT)('@')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('ann')
        PsiWhiteSpace(' ')
        PsiElement(INTEGER_LITERAL)('6')
      PsiWhiteSpace('\n\n    ')
      CALL_EXPRESSION
        DOT_QUALIFIED_EXPRESSION
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('foo')
          PsiElement(DOT)('.')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('bar')
            VALUE_ARGUMENT_LIST
              PsiElement(LPAR)('(')
              VALUE_ARGUMENT
                ANNOTATED_EXPRESSION
                  PsiErrorElement:Expected annotation identifier after '@'
                    PsiElement(AT)('@')
                  PsiWhiteSpace(' ')
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('ann')
              PsiWhiteSpace(' ')
              PsiErrorElement:Expecting ')'
                PsiElement(fun)('fun')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            BINARY_WITH_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('x')
              OPERATION_REFERENCE
                PsiElement(COLON)(':')
              PsiWhiteSpace(' ')
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('Int')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        FUNCTION_LITERAL_ARGUMENT
          FUNCTION_LITERAL_EXPRESSION
            FUNCTION_LITERAL
              PsiElement(LBRACE)('{')
              PsiWhiteSpace('\n\n    ')
              BLOCK
                <empty list>
              PsiElement(RBRACE)('}')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n    ')
      IF
        PsiElement(if)('if')
        PsiWhiteSpace(' ')
        PsiElement(LPAR)('(')
        CONDITION
          ANNOTATED_EXPRESSION
            PsiErrorElement:Expected annotation identifier after '@'
              PsiElement(AT)('@')
            PsiWhiteSpace(' ')
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('ann')
        PsiErrorElement:Expecting ')
          <empty list>
        PsiWhiteSpace(' ')
        THEN
          BINARY_EXPRESSION
            BOOLEAN_CONSTANT
              PsiElement(true)('true')
            PsiWhiteSpace(' ')
            OPERATION_REFERENCE
              PsiElement(OROR)('||')
            PsiWhiteSpace(' ')
            BOOLEAN_CONSTANT
              PsiElement(true)('true')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(RPAR)(')')
      PsiWhiteSpace(' ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n\n    ')
          BLOCK
            <empty list>
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      PsiErrorElement:Expecting an element
        PsiElement(else)('else')
      PsiWhiteSpace(' ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            <empty list>
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      LABELED_EXPRESSION
        LABEL_QUALIFIER
          LABEL
            PsiElement(IDENTIFIER)('label')
            PsiElement(AT)('@')
        PsiWhiteSpace(' ')
        ANNOTATED_EXPRESSION
          PsiErrorElement:Expected annotation identifier after '@'
            PsiElement(AT)('@')
          PsiWhiteSpace(' ')
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('ann')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        <empty list>
      PsiWhiteSpace(' ')
      WHILE
        PsiElement(while)('while')
        PsiWhiteSpace(' ')
        PsiElement(LPAR)('(')
        CONDITION
          BOOLEAN_CONSTANT
            PsiElement(true)('true')
        PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        BODY
          BLOCK
            PsiElement(LBRACE)('{')
            PsiWhiteSpace('\n        ')
            ANNOTATED_EXPRESSION
              PsiErrorElement:Expected annotation identifier after '@'
                PsiElement(AT)('@')
              PsiWhiteSpace(' ')
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('ann')
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              <empty list>
            PsiWhiteSpace(' ')
            BREAK
              PsiElement(break)('break')
              LABEL_QUALIFIER
                LABEL
                  PsiElement(AT)('@')
                  PsiElement(IDENTIFIER)('label')
            PsiWhiteSpace('\n    ')
            PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      RETURN
        PsiElement(return)('return')
        LABEL_QUALIFIER
          LABEL
            PsiElement(AT)('@')
            PsiElement(IDENTIFIER)('label')
        PsiWhiteSpace(' ')
        ANNOTATED_EXPRESSION
          PsiErrorElement:Expected annotation identifier after '@'
            PsiElement(AT)('@')
          PsiWhiteSpace(' ')
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('ann')
      PsiWhiteSpace(' ')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(INTEGER_LITERAL)('1')
      PsiWhiteSpace('\n\n    ')
      PsiComment(EOL_COMMENT)('// multiline')
      PsiWhiteSpace('\n    ')
      ANNOTATED_EXPRESSION
        PsiErrorElement:Expected annotation identifier after '@'
          PsiElement(AT)('@')
        PsiWhiteSpace('\n    ')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('ann')
      PsiWhiteSpace('\n    ')
      INTEGER_CONSTANT
        PsiElement(INTEGER_LITERAL)('1')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')